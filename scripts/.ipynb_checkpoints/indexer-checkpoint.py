import requests
import pandas as pd

BASE = "http://127.0.0.1:5000/"
response = requests.put(BASE + "hotelindexer")

###############################################################################################################

from elasticsearch import Elasticsearch
from elasticsearch.helpers import bulk
# Password for the 'elastic' user generated by Elasticsearch
ELASTIC_PASSWORD = "7ysm8X2-_DU1fiAwpkSh"

# Create the client instance
es = Elasticsearch(
    "https://localhost:9200",
    ca_certs=r"C:\Users\huzyfa\Desktop\elasticsearch-8.1.0\config\certs\http_ca.crt",
    basic_auth=("elastic", ELASTIC_PASSWORD))

###############################################################################################################


# reading the hotels dataframe
df = pd.read_csv("../csv-files/just_hotels_catg.csv", index_col="name")

# the assignment didn't specify any aggregation kind, but i will use this one , i will use this in the indexer
# generator function for the dataset
gendata = ({nam: [(row).to_dict() for _, row in df.loc[[nam]].T.items()]} for nam in df.index.unique())


maps = {'mappings': 
         {'properties': 
              {'hotel_name': {'properties': 
                                  {'address': {'type': 'text', 
                                               'fields': {'keyword': {'type': 'keyword', 'ignore_above': 256}
                                                         }}, 
                                   'categories': {'type': 'text', 
                                                  'fields': {'keyword': {'type': 'keyword', 'ignore_above': 256}
                                                            }}, 
                                   'city': {'type': 'text', 
                                            'fields': {'keyword': {'type': 'keyword', 'ignore_above': 256}
                                                      }}, 
                                   'country': {'type': 'text', 
                                               'fields': {'keyword': {'type': 'keyword', 'ignore_above': 256}
                                                         }},    
                                   'latitude': {'type': 'float'}, 
                                   'longitude': {'type': 'float'}, 
                                   'name': {'type': 'text', 
                                            'fields': {'keyword': {'type': 'keyword', 'ignore_above': 256}
                                                      }},    
                                   'postalCode': {'type': 'text', 
                                                  'fields': {'keyword': {'type': 'keyword', 'ignore_above': 256}
                                                            }},    
                                   'province': {'type': 'text', 
                                                'fields': {'keyword': {'type': 'keyword', 'ignore_above': 256}
                                                          }}, 
                                   'reviews': 
                                           {'properties': {
                                                           'date': {'type': 'date'}, 
                                                           'dateAdded': {'type': 'date'}, 
                                                           'doRecommend': {'type': 'float'}, 
                                                           'id': {'type': 'float'}, 
                                                           'rating': {'type': 'float'}, 
                                                           'text': {'type': 'text', 
                                                                    'fields': {'keyword': {'type': 'keyword', 'ignore_above': 256}
                                                                              }}, 
                                                           'title': {'type': 'text', 
                                                                     'fields': {'keyword': {'type': 'keyword', 'ignore_above': 256}
                                                                               }}, 
                                                           'userCity': {'type': 'text', 
                                                                        'fields': {'keyword': {'type': 'keyword', 'ignore_above': 256}
                                                                                  }}, 
                                                           'userProvince': {'type': 'text', 
                                                                            'fields': {'keyword': {'type': 'keyword', 
                                                                                                   'ignore_above': 256}
                                                                                      }}, 
                                                           'username': {'type': 'text', 
                                                                        'fields': {'keyword': {'type': 'keyword', 'ignore_above': 256}
                                                                                  }}
                                           }}}}}}}



# i made number_of_replicas=0 due to my PC limitation
maps["settings"]={"number_of_shards": 1,
                  "number_of_replicas": 0,
                  "refresh_interval": 60}


# indexing the data using bulk API helper        
bulk(es, gendata)
